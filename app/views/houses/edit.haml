.row.house-app
  =render "header"
  .col-md-12.tab{"v-bind:class" => "{active_tab: tab == 1}"}
    %table-component.basket{ ":columns": "basket_columns" ,
                      ":table_data": "basket.items",
                      ":column_order": "basket_order"}
      %template{ slot: "name" , "slot-scope" => "row"}
        %a{ ":href" => "'/products/' + row.object.product_id"}
          {{row.object.name}}
      %template{ slot: "quantity" , "slot-scope" => "row" , ":class": "quantity"}
        {{row.object.quantity}}
        .overlay
          %a{ "@click" => "row.object.quantity += 1; changed = true"}
            =image_tag "plus.png"
          \&nbsp;
          %span {{row.object.quantity}}
          \&nbsp;
          %a{ "@click" => "row.object.quantity -= 1; changed = true"}
            =image_tag "minus.png"
      %template{ slot: "total" , "slot-scope" => "row"}
        {{(row.object.price * row.object.quantity).toFixed(2)}}
      %template{slot: "last"}
        %th= t(:total)
        %td
        %td
        %td
          {{total_amount()}}
        %td
          = form_for(@basket) do |f|
            %span{"v-for" => "(item , index) in this.basket.items"}
              %input{hidden: true , "v-bind" => "itemProp(item,index,'id')" , "v-if"=> "item.id"}/
              %input{hidden: true , "v-bind" => "itemProp(item,index,'name')"}/
              %input{hidden: true , "v-bind" => "itemProp(item,index,'price')"}/
              %input{hidden: true , "v-bind" => "itemProp(item,index,'quantity')"}/
              %input{hidden: true , "v-bind" => "itemProp(item,index,'product_id')"}/
            = f.submit :class => "btn btn-success commit" ,"v-if" => "changed", "@click" => "submit_basket"
        %th
          {{(total_price()/ 1.24).toFixed(2)}}

  .col-md-12.tab{"v-bind:class" => "{active_tab: tab == 2}"}
    %table-component{ ":columns": "product_columns" ,
                      ":table_data": "products",
                      ":column_order": "product_order"}
      %template{ slot: "name" , "slot-scope" => "row"}
        %a{ ":href" => "'/products/' + row.object.id"}
          {{row.object.name}}
      %template{ slot: "add" , "slot-scope" => "row"}
        %a{ "@click" => "product_to_basket(row.object)" , "v-if" => "!in_basket(row.object)"}
          =image_tag "plus.png" , width: "30px"
      %template{ slot: "category" , "slot-scope" => "row"}
        %a{ "@click" => "category_to_basket(row.object)" , "v-if" => "!in_basket(row.object)"}
          =image_tag "plus.png" , width: "30px"
        {{row.object.category}}

  .row
    .col-md-2
      = link_to( t(:back) , basket_path(@basket) , class: "btn btn-info")

=render "components/table"

:ruby2js
  class App < Vue
    options el: '.house-app'
    def initialize
      @tab = 1
      @changed = false
      @basket = #{ render( partial: "baskets/basket.json").html_safe }
      @basket_columns = { position: {name: "#{t(:position)}"},
                          scode: {name: "#{t(:scode)}"},
                          name: {name: "#{t(:name)}" , searchable: true },
                          quantity: {name: "#{t(:quantity)}"},
                          price: {name: "#{t(:price)}"},
                          total: {name: "#{t(:total)}" , sortable: false} }
      @basket_order = [:position,:scode,:name,:quantity,:price,:total]
      @products = #{ render( partial: "houses/products.json").html_safe }
      @product_order = [ :scode , :name , :category , :amount , :price , :add]
      @product_columns = {scode:      {name: "#{t(:scode)}" },
                          name:       {name: "#{t(:name)}" , searchable: true},
                          category:   {name: "#{t(:category)}" , searchable: true},
                          price:      {name: "#{t(:price)}"} ,
                          amount:      {name: "#{t(:quantity)}"} ,
                          add:        {name: ""} }
    end
    def itemProp(item, index , prop)
      return { value: item[prop] ,
              name: 'basket[items_attributes][' + index +'][' + prop + ']',
              id: 'basket_items_attributes_' + index + '_' + prop
             }
    end

    def submit_basket(event)
      event.preventDefault()
      jQuery.post( '/baskets/' + @basket.id , jQuery(".edit_basket").serializeArray() , null , "json").
        done() { |saved_basket| @basket = saved_basket ; @changed = false }.
        fail() { alert( "save failed" ) }
    end
    def category_to_basket(product)
      @products.each do |p|
        product_to_basket(p) if p.category == product.category
      end
    end
    def product_to_basket(product)
      amount = product.amount
      return unless(amount > 0)
      this.basket.items.push({ name: product.name ,
                           quantity: amount,
                              scode: product.scode,
                              price: product.price,
                         product_id: product.id,
                           position: product.position});
      @changed = true
    end
    def in_basket(product)
      return @basket.items.find { |item| item.product_id == product.id }
    end
    def total_price(_)
      sum = 0
      @basket.items.each { |item| sum += item.price * item.quantity }
      return sum
    end
    def total_amount(_)
      sum = 0
      @basket.items.each { |item| sum += item.quantity }
      return sum
    end
  end
